{"version":3,"sources":["firebase.js","components/Login.js","components/CreateAccount.js","routes/Auth.js","components/Header.js","components/Todo.js","components/TodoFactory.js","components/TodoList.js","components/CalendarHeader.js","components/CalendarBody.js","components/Calendar.js","routes/Home.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_MESSAGING_SENDER_ID","appId","authService","initializeApp","getAuth","dbService","getFirestore","AuthForm","useState","email","setEmail","password","setPassword","onChange","e","target","name","value","onSubmit","useCallback","a","preventDefault","signInWithEmailAndPassword","data","console","log","error","className","icon","faUser","type","placeholder","required","autoComplete","faLock","minLength","maxLength","React","memo","CreateAccount","createUserWithEmailAndPassword","alert","Auth","createAccount","setCreateAccount","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","onClick","split","menuTap","document","querySelector","Array","from","children","forEach","child","classList","remove","add","useEffect","Login","faGoogle","style","marginLeft","Header","todoDate","onLogOutClick","window","confirm","signOut","JSON","stringify","clone","slice","faSignOutAlt","Todo","userObj","todoObj","index","editing","setEditing","todo","newTodo","setNewTodo","setError","onToggleFinish","updateDoc","doc","uid","id","isFinish","onDeleteClick","deleteDoc","faEdit","faWindowClose","display","alignItems","color","textDecoration","height","faTrashAlt","TodoFactory","setTodo","Date","createdAt","now","addDoc","collection","faPlus","TodoList","todos","setTodos","q","query","where","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","CalndarHeader","calendarYM","moveMonth","faArrowCircleLeft","faArrowCircleRight","Week","firstDayOfThisWeekFormat","ymOfThisCalendar","clickDate","changeDate","Days","calendarMonthYear","clickedDayFormat","thisMonth","moment","dayInfo","i","isSame","yearMonthDayFormat","getDay","mapDaysToComponents","firstDayFormat","weekIndex","_days","day","push","format","isHolyDay","days","CalendarBody","form","dateForm","YM","Weeks","monthYear","firstDayOfMonth","startOf","firstDateOfMonth","get","firstDayOfWeek","_Weeks","date","idx","Calendar","setClickDate","setCalendarYM","cloneDeep","require","val","newYM","clickedDate","isBefore","isAfter","CalendarHeader","Home","setTodoDate","isLogin","path","exact","App","init","setInit","setUserobj","onAuthStateChanged","user","Router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3d29b9af.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_API_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { authService } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLock, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction AuthForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"email\") setEmail(value);\r\n    if (name === \"password\") setPassword(value);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    async e => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n        const data = await signInWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n        console.log(data);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    },\r\n    [email, password]\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"input-form\">\r\n        <div className=\"email\">\r\n          <div className=\"input-icon\">\r\n            <FontAwesomeIcon icon={faUser} />\r\n          </div>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"authInput\"\r\n            placeholder=\"Email\"\r\n            onChange={onChange}\r\n            required\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"password\">\r\n          <div className=\"input-icon\">\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </div>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"authInput\"\r\n            placeholder=\"Password\"\r\n            onChange={onChange}\r\n            minLength=\"8\"\r\n            maxLength=\"16\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"authBtn\">Sign In</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default React.memo(AuthForm);\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faLock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { authService } from \"../firebase\";\r\n\r\nfunction CreateAccount() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    async e => {\r\n      e.preventDefault();\r\n\r\n      try {\r\n        const data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n        console.log(data);\r\n      } catch (e) {\r\n        alert(\"이미 가입된 이메일입니다\");\r\n      }\r\n    },\r\n    [email, password]\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"input-form\">\r\n        <div className=\"email\">\r\n          <div className=\"input-icon\">\r\n            <FontAwesomeIcon icon={faUser} />\r\n          </div>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"authInput\"\r\n            placeholder=\"Email\"\r\n            onChange={onChange}\r\n            autoComplete=\"off\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"password\">\r\n          <div className=\"input-icon\">\r\n            <FontAwesomeIcon icon={faLock} />\r\n          </div>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"authInput\"\r\n            placeholder=\"Password\"\r\n            minLength=\"8\"\r\n            maxLength=\"16\"\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"authBtn\">Sign Up</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default React.memo(CreateAccount);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Login from \"../components/Login\";\r\nimport CreateAccount from \"../components/CreateAccount\";\r\nimport {\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { authService } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nfunction Auth() {\r\n  const [createAccount, setCreateAccount] = useState(false);\r\n\r\n  const onSocialClick = useCallback(async e => {\r\n    const provider = new GoogleAuthProvider();\r\n    await signInWithPopup(authService, provider);\r\n  }, []);\r\n\r\n  const onClick = useCallback(\r\n    e => {\r\n      const name = e.target.className.split(\" \")[0];\r\n\r\n      if (name === \"sign-in\") {\r\n        if (createAccount === false) return;\r\n        setCreateAccount(false);\r\n      } else if (name === \"sign-up\") {\r\n        if (createAccount === true) return;\r\n        setCreateAccount(true);\r\n      }\r\n\r\n      const menuTap = document.querySelector(\".menu-tap\");\r\n\r\n      Array.from(menuTap.children).forEach(child =>\r\n        child.classList.remove(\"selected\")\r\n      );\r\n\r\n      e.target.classList.add(\"selected\");\r\n    },\r\n    [createAccount]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const signIn = document.querySelector(\".sign-in\");\r\n    signIn.classList.add(\"selected\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"auth-container\">\r\n        <div className=\"title\">D i a r y</div>\r\n        <div className=\"menu-tap\">\r\n          <div className=\"sign-in menu\" onClick={onClick}>\r\n            SIGN IN\r\n          </div>\r\n          <div className=\"sign-up menu\" onClick={onClick}>\r\n            SIGN UP\r\n          </div>\r\n        </div>\r\n        <div className=\"form-container\">\r\n          {createAccount ? <CreateAccount /> : <Login />}\r\n          <div className=\"social-form\">\r\n            or you can sign in with\r\n            <div className=\"social-icons\">\r\n              <button\r\n                className=\"social-icon\"\r\n                onClick={onSocialClick}\r\n                name=\"google\"\r\n              >\r\n                login with\r\n                <FontAwesomeIcon\r\n                  icon={faGoogle}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Auth);\r\n","import React from \"react\";\r\nimport { authService } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Header({ todoDate }) {\r\n  const onLogOutClick = () => {\r\n    var result = window.confirm(\"Are you really want to Logout?\");\r\n    if (result) {\r\n      authService.signOut();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left-space\" onClick={onLogOutClick}></div>\r\n      <div className=\"right-space\">\r\n        <div className=\"click-Date\">\r\n          {JSON.stringify(todoDate.clone().add(\"h\", 9)).slice(1, 11)}\r\n        </div>\r\n        <div className=\"logoutBtn\" onClick={onLogOutClick}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState } from \"react\";\r\nimport { dbService } from \"../firebase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faTrashAlt,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Todo({ userObj, todoObj, index }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTodo, setNewTodo] = useState(todoObj.todo);\r\n  const [error, setError] = useState(false);\r\n\r\n  const onToggleFinish = async () => {\r\n    await updateDoc(doc(dbService, userObj.uid, `${todoObj.id}`), {\r\n      isFinish: !todoObj.isFinish,\r\n    });\r\n  };\r\n\r\n  const onToggleEdit = () => {\r\n    setEditing(!editing);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (newTodo === \"\") {\r\n      setError(true);\r\n    } else {\r\n      await updateDoc(doc(dbService, userObj.uid, `${todoObj.id}`), {\r\n        todo: newTodo,\r\n      });\r\n      setError(false);\r\n      setEditing(editing => !editing);\r\n    }\r\n  };\r\n\r\n  const onCancleClick = () => {\r\n    setNewTodo(todoObj.todo);\r\n    setError(false);\r\n    setEditing(editing => !editing);\r\n  };\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure to delete this todo?\");\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, userObj.uid, `${todoObj.id}`));\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    setNewTodo(e.target.value);\r\n  };\r\n\r\n  return editing ? (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"todo-Input\"\r\n          value={newTodo}\r\n          onChange={onChange}\r\n          minLength={1}\r\n        />\r\n        <button className=\"todo-EventBtn\" onClick={onSubmit}>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button className=\"todo-EventBtn\" onClick={onCancleClick}>\r\n          <FontAwesomeIcon icon={faWindowClose} />\r\n        </button>\r\n      </form>\r\n      {error && <div>Please write more than 1 word</div>}\r\n    </>\r\n  ) : (\r\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n      <h4\r\n        onClick={onToggleFinish}\r\n        style={\r\n          todoObj.isFinish\r\n            ? { color: \"gray\", textDecoration: \"line-through\" }\r\n            : null\r\n        }\r\n      >\r\n        {`${index + 1}. ${todoObj.todo}`}\r\n      </h4>\r\n      <button\r\n        className=\"todo-EventBtn\"\r\n        onClick={onToggleEdit}\r\n        style={{ marginLeft: \"5px\", height: \"50%\" }}\r\n      >\r\n        <FontAwesomeIcon icon={faEdit} />\r\n      </button>\r\n      <button\r\n        className=\"todo-EventBtn\"\r\n        onClick={onDeleteClick}\r\n        style={{ marginLeft: \"5px\", height: \"50%\" }}\r\n      >\r\n        <FontAwesomeIcon icon={faTrashAlt} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Todo);\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { dbService } from \"../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction TodoFactory({ userObj, todoDate }) {\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const onChange = e => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    async e => {\r\n      e.preventDefault();\r\n      if (todo === \"\") return;\r\n\r\n      const todoObj = {\r\n        todo,\r\n        Date: todoDate,\r\n        createdAt: Date.now(),\r\n        isFinish: false,\r\n      };\r\n\r\n      try {\r\n        const docRef = await addDoc(\r\n          collection(dbService, userObj.uid),\r\n          todoObj\r\n        );\r\n        setTodo(\"\");\r\n      } catch (e) {\r\n        console.error(\"Error adding document: \", e);\r\n      }\r\n    },\r\n    [todo, todoDate, userObj]\r\n  );\r\n\r\n  return (\r\n    <form className=\"todo-Input-form\" onSubmit={onSubmit}>\r\n      <input\r\n        className=\"todo-Input\"\r\n        type=\"text\"\r\n        placeholder=\" Write what will you do\"\r\n        onChange={onChange}\r\n        value={todo}\r\n      />\r\n      <button className=\"todo-InputBtn\">\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoFactory);\r\n","import { collection, onSnapshot, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"../firebase\";\r\nimport Todo from \"./Todo\";\r\nimport TodoFactory from \"./TodoFactory\";\r\nimport \"../css/TodoList.css\";\r\n\r\nfunction TodoList({ userObj, todoDate }) {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, userObj.uid),\r\n      where(\"Date\", \"==\", todoDate)\r\n    );\r\n    const unsubscribe = onSnapshot(q, querySnapshot => {\r\n      const newArray = querySnapshot.docs.map(doc => {\r\n        return {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        };\r\n      });\r\n      setTodos(newArray);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [userObj, todoDate]);\r\n\r\n  return (\r\n    <div className=\"todoList-Container\">\r\n      <TodoFactory userObj={userObj} todoDate={todoDate} />\r\n      <div className=\"todo-Container\">\r\n        {todos.map((todo, index) => (\r\n          <Todo key={todo.id} userObj={userObj} todoObj={todo} index={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoList);\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CalndarHeader({ calendarYM, moveMonth }) {\r\n  const prevMonth = () => {\r\n    moveMonth(-1);\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    moveMonth(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <span className=\"move-button left-img icon\" onClick={prevMonth}>\r\n        <FontAwesomeIcon icon={faArrowCircleLeft} />\r\n      </span>\r\n      <h2 className=\"header-calendarYM header-middle\">{calendarYM}</h2>\r\n      <span className=\"move-button right-img icon\" onClick={nextMonth}>\r\n        <FontAwesomeIcon icon={faArrowCircleRight} />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(CalndarHeader);\r\n","import moment from \"moment\";\r\nimport React, { useCallback } from \"react\";\r\n\r\nconst Week = React.memo(function Week({\r\n  firstDayOfThisWeekFormat,\r\n  ymOfThisCalendar,\r\n  clickDate,\r\n  changeDate,\r\n}) {\r\n  const days = (firstDayFormat, weekIndex) => {\r\n    const _days = [];\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const day = moment(firstDayFormat).add(\"d\", i);\r\n      _days.push({\r\n        yearMonthDayFormat: day.format(\"YYYY-MM-DD\"),\r\n        getDay: day.format(\"D\"),\r\n        isHolyDay: false,\r\n        weekIndex,\r\n      });\r\n    }\r\n    return _days;\r\n  };\r\n\r\n  const mapDaysToComponents = (\r\n    Days,\r\n    calendarMonthYear,\r\n    clickedDayFormat,\r\n    changeDate\r\n  ) => {\r\n    const thisMonth = moment(calendarMonthYear);\r\n    return Days.map((dayInfo, i) => {\r\n      let className = \"date-weekday-label\";\r\n\r\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat, \"month\")) {\r\n        className = \"date-notThisMonth\";\r\n      } else if (i === 0) {\r\n        className = \"date-sun\";\r\n      } else if (i === 6) {\r\n        className = \"date-sat\";\r\n      }\r\n\r\n      if (moment(dayInfo.yearMonthDayFormat).isSame(clickedDayFormat, \"day\")) {\r\n        className = \"clicked\";\r\n      }\r\n\r\n      return (\r\n        <div\r\n          className={\"calendar-day \" + className}\r\n          onClick={() => {\r\n            changeDate(dayInfo.yearMonthDayFormat);\r\n          }}\r\n        >\r\n          <label className=\"calendar-day-label\">{dayInfo.getDay}</label>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-week\">\r\n      {mapDaysToComponents(\r\n        days(firstDayOfThisWeekFormat),\r\n        ymOfThisCalendar,\r\n        clickDate,\r\n        changeDate\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction CalendarBody({ dateForm, YM, clickDate, changeDate }) {\r\n  const mapArrayToDate = form => {\r\n    return form.map((date, idx) => {\r\n      const className = () => {\r\n        let className = \"calendar-date-component\";\r\n        if (idx === 0) {\r\n          return className + \" date-sun\";\r\n        } else if (idx === 6) {\r\n          return className + \" date-sat\";\r\n        } else {\r\n          return className + \" date-weekday\";\r\n        }\r\n      };\r\n\r\n      return (\r\n        <div className={className()} key={date}>\r\n          {date}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const Weeks = useCallback((monthYear, clickDate, changeDate) => {\r\n    const firstDayOfMonth = moment(monthYear).startOf(\"month\");\r\n    const firstDateOfMonth = firstDayOfMonth.get(\"d\");\r\n\r\n    const firstDayOfWeek = firstDayOfMonth.clone().add(\"d\", -firstDateOfMonth);\r\n\r\n    const _Weeks = [];\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      _Weeks.push(\r\n        <Week\r\n          key={`calendar-week=${i}`}\r\n          weekIndex={i}\r\n          ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n          firstDayOfThisWeekFormat={firstDayOfWeek\r\n            .clone()\r\n            .add(\"d\", i * 7)\r\n            .format(\"YYYY-MM-DD\")}\r\n          clickDate={clickDate}\r\n          changeDate={changeDate}\r\n        />\r\n      );\r\n    }\r\n    return _Weeks;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"body-container\">\r\n      <div className=\"calendar-body-header\">{mapArrayToDate(dateForm)}</div>\r\n      <div className=\"calendar-body\">{Weeks(YM, clickDate, changeDate)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(CalendarBody);\r\n","import React, { useCallback, useState } from \"react\";\r\nimport CalendarHeader from \"./CalendarHeader\";\r\nimport CalendarBody from \"./CalendarBody\";\r\nimport \"../css/Calendar.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction Calendar({ clickDate, setClickDate }) {\r\n  const [calendarYM, setCalendarYM] = useState(clickDate);\r\n  const cloneDeep = require(\"lodash.clonedeep\");\r\n\r\n  const moveMonth = useCallback(\r\n    val => {\r\n      const newYM = cloneDeep(calendarYM);\r\n      setCalendarYM(newYM.add(val, \"M\"));\r\n    },\r\n    [calendarYM, cloneDeep]\r\n  );\r\n\r\n  const changeDate = useCallback(\r\n    clickedDate => {\r\n      if (moment(clickedDate).isSame(clickDate, \"day\")) {\r\n        return;\r\n      }\r\n\r\n      setClickDate(moment(clickedDate));\r\n\r\n      if (moment(clickedDate).isBefore(calendarYM, \"Month\")) {\r\n        moveMonth(-1);\r\n      } else if (moment(clickedDate).isAfter(calendarYM, \"month\")) {\r\n        moveMonth(1);\r\n      }\r\n    },\r\n    [clickDate, calendarYM, setClickDate, moveMonth]\r\n  );\r\n\r\n  return (\r\n    <div className=\"calendar-wrap\">\r\n      <div className=\"calendar-container\">\r\n        <CalendarHeader\r\n          calendarYM={calendarYM.format(\"YYYY년 MM월\")}\r\n          clickDate={\r\n            typeof clickDate === \"string\"\r\n              ? `현재 ${clickDate}`\r\n              : clickDate.format(\"현재 YYYY-MM-DD\")\r\n          }\r\n          moveMonth={moveMonth}\r\n        />\r\n        <CalendarBody\r\n          dateForm={[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]}\r\n          YM={calendarYM.format(\"YYYY-MM-DD\")}\r\n          clickDate={clickDate}\r\n          changeDate={changeDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Calendar);\r\n","import React, { useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport moment from \"moment\";\r\nimport Calendar from \"../components/Calendar\";\r\nimport \"../css/Home.css\";\r\n\r\nfunction Home({ userObj }) {\r\n  const [todoDate, setTodoDate] = useState(moment());\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"container\">\r\n        <Header todoDate={todoDate} />\r\n        <div className=\"body\">\r\n          <Calendar clickDate={todoDate} setClickDate={setTodoDate} />\r\n          <TodoList\r\n            userObj={userObj}\r\n            todoDate={JSON.stringify(todoDate).slice(1, 11)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Home);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\n\r\nexport default ({ isLogin, userObj }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLogin ? (\r\n          <Route path=\"/Diary\" exact>\r\n            <Home userObj={userObj} />\r\n          </Route>\r\n        ) : (\r\n          <Route path=\"/Diary\" exact>\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Router from \"./Router\";\r\nimport { authService } from \"../firebase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserobj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged(user => {\r\n      if (user) {\r\n        setUserobj(user);\r\n      } else {\r\n        setUserobj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <Router isLogin={userObj} userObj={userObj} />\r\n      ) : (\r\n        <div>Initializing...</div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}